{
	"@param": {
		"prefix": ["@param"],
		"body": ["@param {${1:TYPE}} ${2:param} - ${3:description}"],
		"description": "syntax: `@param <type> <name> [-] [description]`;\nsynonyms: @arg, @argument;\n- Nullable: `@param {?number} param`, \n- Not Nullable: `@param {!Object} param`\n- Union: `@param {number|string} param`\n- Nullable and Union: `@param {?(number|string)} param`\n- Spread: `@param {...number} param`\n- Optional: `@param {number} [param]`\n- Default: `@param {number} [param=10]`\n- Function: `@param {function(foo: number, bar: string): boolean} param`\n- Generics: `@param {Map<number, string>} param`\n- Record: `@param {{foo: ?number, bar: string}} param`\nhttps://tsdoc.org/pages/tags/param/\nhttps://esdoc.org/manual/tags.html#type-syntax\nhttps://jsdoc.app/tags-param.html\n"
	},
	"@param is any type": {
		"prefix": ["@param.any"],
		"body": ["@param {*} ${1:param} - ${2:description}"],
		"description": "parameter is any type\n"
	},
	"@param is an Object": {
		"prefix": ["@param.object"],
		"body": ["@param {Object} ${1:param} - ${2:description}"],
		"description": "parameter is an Object\n"
	},
	"@param is an Array": {
		"prefix": ["@param.array"],
		"body": ["@param {${3:Object}[]} ${1:param} - ${2:description}"],
		"description": "parameter is Array\n"
	},
	"@param is a string": {
		"prefix": ["@param.string"],
		"body": ["@param {string} ${1:param} - ${2:description}"],
		"description": "parameter is a string\n"
	},
	"@param is a number": {
		"prefix": ["@param.number"],
		"body": ["@param {number} ${1:param} - ${2:description}"],
		"description": "parameter is a number\n"
	},
	"@param is a boolean": {
		"prefix": ["@param.boolean"],
		"body": ["@param {boolean} ${1:param} - ${2:description}"],
		"description": "parameter is a boolean\n"
	},
	"@param is a Function": {
		"prefix": ["@param.function"],
		"body": ["@param {Function} ${1:param} - ${2:description}"],
		"description": "parameter is a Function\n"
	},
	"@param is a DOMElement": {
		"prefix": ["@param.DOMElement"],
		"body": ["@param {DOMElement} ${1:param} - ${2:description}"],
		"description": "parameter is a DOM element\n"
	},
	"@param is a Node": {
		"prefix": ["@param.Node"],
		"body": ["@param {Node} ${1:param} - ${2:description}"],
		"description": "parameter is a DOM node\n"
	},
	"@param is a NodeList": {
		"prefix": ["@param.NodeList"],
		"body": ["@param {NodeList} ${1:param} - ${2:description}"],
		"description": "parameter is an array of nodes or NodeList\n"
	},
	"@param is a RegExp": {
		"prefix": ["@param.RegExp"],
		"body": ["@param {RegExp} ${1:param} - ${2:description}"],
		"description": "parameter is a RegExp\n"
	},
	"@param is a Generics": {
		"prefix": ["@param.generics"],
		"body": ["@param {${1:Array}<${2:string}>} ${3:param} - ${4:description}"],
		"description": "parameter is a Generics Type\n"
	},
	"@param (single)": {
		"prefix": ["@param"],
		"body": [
			"/**",
			" * @param {${1:TYPE}} ${2:param} - ${3:description}",
			"*/"
		],
		"description": "syntax: `@param <type> <name> [-] [description]`;\nsynonyms: @arg, @argument;\n- Nullable: `@param {?number} param`, \n- Not Nullable: `@param {!Object} param`\n- Union: `@param {number|string} param`\n- Nullable and Union: `@param {?(number|string)} param`\n- Spread: `@param {...number} param`\n- Optional: `@param {number} [param]`\n- Default: `@param {number} [param=10]`\n- Function: `@param {function(foo: number, bar: string): boolean} param`\n- Generics: `@param {Map<number, string>} param`\n- Record: `@param {{foo: ?number, bar: string}} param`\nhttps://tsdoc.org/pages/tags/param/\nhttps://esdoc.org/manual/tags.html#type-syntax\nhttps://jsdoc.app/tags-param.html"
	}
}
